"use client";
import { useState } from "react";

export default function QuizGenerator() {
  const [inputText, setInputText] = useState("");
  const [quiz, setQuiz] = useState<{ question: string; options: string[]; answer: string }[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  const generateQuiz = async () => {
    if (!inputText.trim()) {
      setError("Please enter a topic first!");
      return;
    }

    setLoading(true);
    setError("");
    
    try {
      const response = await fetch("/api/generate", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ text: inputText }),
      });

      if (!response.ok) throw new Error("Failed to generate quiz");
      const { quiz } = await response.json();
      setQuiz(quiz || []);
    } catch (err) {
      setError("Ollama server offline. Did you run 'ollama serve'?");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 p-4 md:p-8">
      <div className="max-w-2xl mx-auto bg-white rounded-lg shadow-md p-6">
        <h1 className="text-2xl font-bold text-center mb-6">AI Quiz Generator</h1>
        
        {/* Input Area */}
        <textarea
          className="w-full p-3 border rounded-lg mb-4 focus:ring-2 focus:ring-blue-500"
          rows={5}
          placeholder="Enter a topic (e.g., 'French Revolution' or 'Python loops')..."
          value={inputText}
          onChange={(e) => setInputText(e.target.value)}
        />
        
        {/* Generate Button */}
        <button
          onClick={generateQuiz}
          disabled={loading}
          className={`w-full py-2 px-4 rounded-lg font-medium ${loading ? "bg-gray-400" : "bg-blue-600 hover:bg-blue-700"} text-white`}
        >
          {loading ? "Generating..." : "Generate Quiz"}
        </button>

        {/* Error Message */}
        {error && <p className="mt-3 text-red-500 text-sm">{error}</p>}

        {/* Quiz Output */}
        {quiz.length > 0 && (
          <div className="mt-8">
            <h2 className="text-xl font-semibold mb-4">Your Quiz:</h2>
            {quiz.map((q, i) => (
              <div key={i} className="mb-6 p-4 border rounded-lg bg-gray-50">
                <p className="font-medium mb-2">{q.question}</p>
                <ul className="space-y-2 ml-4">
                  {q.options.map((option, j) => (
                    <li key={j} className="flex items-start">
                      <span className="mr-2">â€¢</span>
                      <span className={option === q.answer ? "font-bold text-green-600" : ""}>
                        {option}
                      </span>
                    </li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
}